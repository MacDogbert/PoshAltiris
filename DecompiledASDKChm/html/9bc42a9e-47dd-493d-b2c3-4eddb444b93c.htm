<!--
SYMANTEC:     Copyright (c) 2016 Symantec Corporation. All rights reserved.

THIS SOFTWARE CONTAINS CONFIDENTIAL INFORMATION AND TRADE SECRETS OF SYMANTEC CORPORATION. USE, 
DISCLOSURE OR REPRODUCTION IS PROHIBITED WITHOUT THE PRIOR EXPRESS WRITTEN PERMISSION OF SYMANTEC
CORPORATION.

The Licensed Software and Documentation are deemed to be commercial computer software as defined
in FAR 12.212 and subject to restricted rights as defined in FAR Section 52.227-19 "Commercial
Computer Software - Restricted Rights" and DFARS 227.7202, Rights in "Commercial Computer Software
or Commercial Computer Software Documentation", as applicable, and any successor regulations,
whether delivered by Symantec as on premises or hosted services.  Any use, modification, reproduction
release, performance, display or disclosure of the Licensed Software and Documentation by the U.S.
Government shall be solely in accordance with the terms of this Agreement.
-->

<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Data Table Conversions</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><xml><MSHelp:Keyword Index="A" Term="9bc42a9e-47dd-493d-b2c3-4eddb444b93c" /><MSHelp:Attr Name="RevisionNumber" Value="1" /><MSHelp:Attr Name="AssetID" Value="9bc42a9e-47dd-493d-b2c3-4eddb444b93c" /><MSHelp:Attr Name="Abstract" Value="&#xD;&#xA;        The ASDK contains a few APIs that appear to return a Data Table but actually return something different.&#xD;&#xA;        These APIs are:&#xD;&#xA;        &#xD;&#xA;          &#xD;&#xA;            RunReport&#xD;&#xA;          &#xD;&#xA;          &#xD;&#xA;            RunReportWithParameters&#xD;&#xA;    ..." /><MSHelp:Attr Name="TopicType" Value="kbArticle" /><MSHelp:Attr Name="Locale" Value="en-us" /></xml><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"></script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">Symantec Administrator SDK 8.0</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Data Table Conversions</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a>  
  <span id="headfeedbackarea" class="feedbackhead">
      <a href="javascript:SubmitFeedback('DL-AL-SDKSupport@symantec.com','Symantec Administrator SDK 8.0','','1.0.0.0','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">
        
        Send Feedback
      </a>
	</span>
</td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"> </span>
  

    <div class="introduction">
      <p>
        The ASDK contains a few APIs that appear to return a Data Table but actually return something different.
        These APIs are:
        <ul><li>
            RunReport
          </li><li>
            RunReportWithParameters
          </li><li>
            GetReportParameters
          </li><li>
            GetDataClassData
          </li></ul>
      </p>
      <p>
        This page provides information about these unusual return values and how to use them. The above APIs do
        in fact use a Data Table in the core DLL; however, ASDK users do not access this specific layer of the
        DLL. In fact, each of the other three API layers returns something different:
        <ul><li>
            The Web service (C#) layer returns an XML node.
          </li><li>
            The COM (VBS) layer returns an ADOdb Recordset.
          </li><li>
            The Command Line Interface layer must be printed to a file. (No additional information about the
            CLI layers is included on this page.)
          </li></ul>
      </p>
      
    </div>

    <a name="Section1" /><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle0)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle0, event)" tabindex="0"><img id="sectionToggle0" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />C# Web Service Xml Node</span></h1><div id="sectionSection0" class="section" name="collapseableSection" style="">
        <p>
          The Web service (C#) layer returns an XML node. This is because Web services are unable to return
          data tables. However, if you are more comfortable using data tables than working with XML nodes,
          the XML node can easily be translated back into a data table. This is the reverse procedure of translating
          the data table into an Xml node.
        </p>
        <p>
          To make this translation, use the following code:
          
          <span id="cbc_1" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre>XmlNode results = rpt_mgmt.RunReport( <span class="highlight-keyword">new</span> Guid( myguid ) );
XmlTextReader reader = <span class="highlight-keyword">new</span> XmlTextReader( <span class="highlight-keyword">new</span> StringReader( results.OuterXml ) );
DataSet ds = <span class="highlight-keyword">new</span> DataSet();
ds.ReadXml( reader );
DataTable dt = ds.Tables[<span class="highlight-number">0</span>];</pre></div></span>
        </p>
        <p>
          If you prefer to use the XML node returned by the Web service layer, you can print the XML to a file
          for viewing using this code:
          
          <span id="cbc_2" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre>XmlNode results = rpt_mgmt.RunReport( <span class="highlight-keyword">new</span> Guid( reportGuid ) );
StreamWriter sw = <span class="highlight-keyword">new</span> StreamWriter( file );
XmlTextWriter writer = <span class="highlight-keyword">new</span> XmlTextWriter( sw );
writer.Formatting = Formatting.Indented;
results.WriteTo( writer );
writer.Close();</pre></div></span>
        </p>
        <p>
          The format of the XML will first list the schema of the data table, followed by the values. Here is
          an example of the Xml node from <span class="code">RunReport()</span> on the report Count of Computers
          Reporting Inventory:
          
          <span id="cbc_3" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre>&lt;NewDataSet xmlns=<span class="highlight-literal">""</span>&gt;
  &lt;xs:schema id=<span class="highlight-literal">"NewDataSet"</span> xmlns=<span class="highlight-literal">""</span> xmlns:xs=<span class="highlight-literal">"http://www.w3.org/2001/XMLSchema"</span> xmlns:msdata=<span class="highlight-literal">"urn:schemas-microsoft-com:xml-msdata"</span>&gt;
    &lt;xs:element name=<span class="highlight-literal">"NewDataSet"</span> msdata:IsDataSet=<span class="highlight-literal">"true"</span> msdata:UseCurrentLocale=<span class="highlight-literal">"true"</span>&gt;
      &lt;xs:complexType&gt;
        &lt;xs:choice minOccurs=<span class="highlight-literal">"0"</span>maxOccurs=<span class="highlight-literal">"unbounded"</span>&gt;
          &lt;xs:element name=<span class="highlight-literal">"Table1"</span>&gt;
            &lt;xs:complexType&gt;
              &lt;xs:sequence&gt;
                &lt;xs:element name=<span class="highlight-literal">"Count_x0020_of_x0020_Computers"</span> type=<span class="highlight-literal">"xs:int"</span> minOccurs=<span class="highlight-literal">"0"</span> /&gt;
                &lt;xs:element name=<span class="highlight-literal">"Name"</span> type=<span class="highlight-literal">"xs:string"</span> minOccurs=<span class="highlight-literal">"0"</span> /&gt;
                &lt;xs:element name=<span class="highlight-literal">"_TableName"</span> type=<span class="highlight-literal">"xs:string"</span> minOccurs=<span class="highlight-literal">"0"</span> /&gt;
                &lt;xs:element name=<span class="highlight-literal">"_Filter"</span> type=<span class="highlight-literal">"xs:string"</span> minOccurs=<span class="highlight-literal">"0"</span> /&gt;
              &lt;/xs:sequence&gt;
            &lt;/xs:complexType&gt;
          &lt;/xs:element&gt;
        &lt;/xs:choice&gt;
      &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
  &lt;/xs:schema&gt;
  &lt;Table1&gt;
    &lt;Count_x0020_of_x0020_Computers&gt;<span class="highlight-number">1</span>&lt;/Count_x0020_of_x0020_Computers&gt;
    &lt;Name&gt;Software Component&lt;/Name&gt;
    &lt;_TableName&gt;Inv_Software_Component&lt;/_TableName&gt;
    &lt;_Filter&gt;All Computers&lt;/_Filter&gt;
  &lt;/Table1&gt;
  &lt;Table1&gt;
    &lt;Count_x0020_of_x0020_Computers&gt;<span class="highlight-number">1</span>&lt;/Count_x0020_of_x0020_Computers&gt;
    &lt;Name&gt;InstalledSoftware&lt;/Name&gt;
    &lt;_TableName&gt;Inv_InstalledSoftware&lt;/_TableName&gt;
    &lt;_Filter&gt;All Computers&lt;/_Filter&gt;
  &lt;/Table1&gt;
&lt;/NewDataSet&gt;</pre></div></span>
        </p>
        <p>
          The schema can be quite useful if you are not sure of the names of each data table column. In addition,
          the XML translation changes certain characters (such as spaces and parentheses) into hexadecimal values,
          which makes using the schema names more robust. Each of the data table values is placed in the XML
          under a Table or Table1 tag. This can be misleading since each 
          Table really is a representation of a row of the original data table. Each
          Table tag contains an element for each column name and a value for the table cell.
          <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" title="Note" src="../icons/alert_note.gif" /></th></tr><tr><td>
            If the value of the cell is empty, then the column element will not be listed. When parsing the XML,
            be aware that not every Table tag will contain every column element.
          </td></tr></table></div>
        </p>
      </div>

    <a name="Section2" /><h1 class="heading"><span onclick="ExpandCollapse(sectionToggle1)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggle1, event)" tabindex="0"><img id="sectionToggle1" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />ADODB Recordset</span></h1><div id="sectionSection1" class="section" name="collapseableSection" style="">
        <p>
          The COM (VBScript) layer takes the XML node translation from the Web service layer and further
          translates it into an ADODB <span class="code">Recordset</span>. This is useful because
          <span class="code">Recordsets</span> are considerably easier to work with when scripting than XML documents are.
          <div class="alert"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"><img class="note" title="Note" src="../icons/alert_note.gif" /><b>Note:</b></th></tr><tr><td>
            The ADODB assembly is a Microsoft primary interop assembly that provides an abstraction layer
            over specific database implementations.
          </td></tr></table></div>
        </p>
        <p>
          <span class="code">Recordset</span> is made up of fields that represent columns from the original
          data table. Fields are made up of Items, which represent the rows from the original data table. Items
          can be accessed either by index number or name.
        </p>
        <p>
          The following code shows an example of this.
          <span id="cbc_4" x-lang="CSharp" codeLanguage="CSharp"><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>C#</div><div class="code"><pre>set results = reportManagement.RunReport( reportObject.Guid )
ipAddr = results.Fields.Item( <span class="highlight-literal">"IP Address"</span> ).Value
ipAddr = results.Fields.Item( <span class="highlight-number">0</span> ).Value</pre></div></span>
        </p>
        <p>
          Other useful functions of <span class="code">Recordsets</span> are <span class="code">Fields.Count, BOF, EOF,
          MoveFirst, MoveLast, MoveNext, and MovePrevious</span>.
          <ul><li>
              <span class="code">Fields.Count</span> will return the number of fields in the <span class="code">Recordset</span>.
            </li><li>
              <span class="code">BOF</span> and <span class="code">EOF</span> stand for Beginning Of File
              and End Of File. If there are no records in a <span class="code">Recordset</span>,
              <span class="code">BOF</span> and <span class="code">EOF</span> are both True. Otherwise,
              these are set to True when you move past the beginning or end of the <span class="code">Recordset</span>
              while using the <span class="code">Move</span> methods.
            </li></ul>
        </p>
        <p>
          An example of using the <span class="code">Recordset</span> is provided in the PushAgent.vbs
          script in the Samples folder that came with the ASDK installation.
        </p>
        <p>
          Following is another example:
          <span><div class="highlight-title"><span class="highlight-copycode" onkeypress="javascript:CopyColorizedCodeCheckKey(this.parentNode, event);" tabindex="0" onmouseover="CopyCodeChangeIcon(this)" onmouseout="CopyCodeChangeIcon(this)" onclick="javascript:CopyColorizedCode(this.parentNode);"><img src="../icons/CopyCode.gif" style="margin-right: 5px;" />Copy</span>VBScript</div><div class="code"><pre><span class="highlight-keyword">set</span> results = reportManagement.RunReport( reportObject.Guid )
<span class="highlight-keyword">if</span> results.Fields.Count &gt; <span class="highlight-number">0</span> <span class="highlight-keyword">then</span>
  results.MoveFirst()
  <span class="highlight-keyword">do</span> <span class="highlight-keyword">while</span> <span class="highlight-keyword">not</span> results.EOF
    ipAddr = results.Fields.Item( <span class="highlight-literal">"IP Address"</span> ).Value
    results.MoveNext()
  <span class="highlight-keyword">loop</span>
<span class="highlight-keyword">end</span> <span class="highlight-keyword">if</span></pre></div></span>
        </p>
      </div>
    <h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ado270/htm/mdobjodbrecpme.asp">See this MSDN article for additional information</a></div></div>
  
</div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss" style="display: none;"> </span>
<p />Send comments on this topic to
        <a id="HT_MailLink" href="mailto:DL-AL-SDKSupport%40symantec.com?Subject=Symantec Administrator SDK 8.0">DL-AL-SDKSupport@symantec.com</a>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> <p />Copyright © 2016, Symantec Corporation, All rights reserved</div></div></body></html>
